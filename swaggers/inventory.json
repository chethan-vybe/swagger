{
  "swagger": "2.0",
  "info": {
    "title": "api/dmsg/centerresource/inventory.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "InventoryService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/inventories/centers/{centerId}": {
      "get": {
        "summary": "List Inventories",
        "operationId": "InventoryService_ListInventory",
        "responses": {
          "200": {
            "description": "Successful response of inventory list",
            "schema": {
              "$ref": "#/definitions/centerresourceInventoryListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/centerresourceInventoryListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "centerId",
            "description": "This center id is used while fetching the associated inventories.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filters.productId",
            "description": "Unique identifier for the product.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters.skuId",
            "description": "Unique identifier for the sku.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters.batchNumber",
            "description": "Unique batch number of the inventory",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters.mfgDateFrom",
            "description": "Manufacturing date of the inventory.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filters.mfgDateTo",
            "description": "Manufacturing date of the inventory.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filters.expiryFrom",
            "description": "Expiry date of the inventory.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filters.expiryTo",
            "description": "Expiry date of the inventory.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filters.order.orderBy",
            "description": "Sort by attributes used for sorting based on what field of the enterprise.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters.order.order",
            "description": "Sort order can be ASCENDING/DESCENDING",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_ORDER_UNSPECIFIED",
              "SORT_ORDER_ASCENDING",
              "SORT_ORDER_DESCENDING"
            ],
            "default": "SORT_ORDER_UNSPECIFIED"
          },
          {
            "name": "curor.offset",
            "description": "Page Offset",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "curor.pageNum",
            "description": "Page Number",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "curor.limit",
            "description": "Defines the page size/limit",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "curor.totalPages",
            "description": "Total number of pages to be fetched.",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64"
          },
          {
            "name": "curor.totalRecords",
            "description": "Total number of records.",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64"
          },
          {
            "name": "selectFields",
            "description": "Fields to select: id, name, description",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      },
      "post": {
        "summary": "Create Inventory",
        "operationId": "InventoryService_Create",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "centerId",
            "description": "Unique identifier for the center in which inventory belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inventories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/centerresourceInventory"
                  },
                  "description": "List of the Inventories."
                }
              },
              "title": "used by the create inventories API request"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/v1/inventories/centers/{centerId}/block": {
      "put": {
        "summary": "block Inventory --\u003e INTERNAL API to block the inventory while processing order to block the inventory",
        "operationId": "InventoryService_Block",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": ".centerresource.InventoryQuantityRefList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": ".centerresource.InventoryQuantityRefList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": ".centerresource.InventoryQuantityRefList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "centerId",
            "description": "Unique identenfier of the center selected",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inventories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/centerresourceInventoryInfo"
                  },
                  "description": "List of inventories added to the cart"
                }
              },
              "title": "InventoryInfoList is used by the internal API for blocking anf unblocking the inventories while procesing the order"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/v1/inventories/centers/{centerId}/product/{productId}": {
      "get": {
        "summary": "Fetch stock details of the specified product",
        "operationId": "InventoryService_GetProductInventoryStock",
        "responses": {
          "200": {
            "description": "Successful response of product inventory stock",
            "schema": {
              "$ref": "#/definitions/centerresourceProductSkuStockInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/centerresourceProductSkuStockInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "centerId",
            "description": "Unique Identifier of the Center in which Inventory belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "description": "Unique Identifier of the product",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/v1/inventories/centers/{centerId}/products": {
      "get": {
        "summary": "List Inventories by Products",
        "operationId": "InventoryService_ListInventoryByProduct",
        "responses": {
          "200": {
            "description": "Successful response of inventory list",
            "schema": {
              "$ref": "#/definitions/centerresourceProductInventoryStockListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/centerresourceProductInventoryStockListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "centerId",
            "description": "This center id is used while fetching the associated inventories.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filters.order.orderBy",
            "description": "Sort by attributes used for sorting based on what field of the enterprise.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters.order.order",
            "description": "Sort order can be ASCENDING/DESCENDING",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_ORDER_UNSPECIFIED",
              "SORT_ORDER_ASCENDING",
              "SORT_ORDER_DESCENDING"
            ],
            "default": "SORT_ORDER_UNSPECIFIED"
          },
          {
            "name": "curor.offset",
            "description": "Page Offset",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "curor.pageNum",
            "description": "Page Number",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "curor.limit",
            "description": "Defines the page size/limit",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "curor.totalPages",
            "description": "Total number of pages to be fetched.",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64"
          },
          {
            "name": "curor.totalRecords",
            "description": "Total number of records.",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64"
          },
          {
            "name": "selectFields",
            "description": "Fields to select: id, name, description",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/v1/inventories/centers/{centerId}/products/skus": {
      "get": {
        "summary": "List Inventories by Products and skus",
        "operationId": "InventoryService_ListInventoryByProductSku",
        "responses": {
          "200": {
            "description": "Successful response of inventory list",
            "schema": {
              "$ref": "#/definitions/centerresourceProductSkuInventoryStockListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/centerresourceProductSkuInventoryStockListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "centerId",
            "description": "This center id is used while fetching the associated inventories.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filters.order.orderBy",
            "description": "Sort by attributes used for sorting based on what field of the enterprise.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters.order.order",
            "description": "Sort order can be ASCENDING/DESCENDING",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SORT_ORDER_UNSPECIFIED",
              "SORT_ORDER_ASCENDING",
              "SORT_ORDER_DESCENDING"
            ],
            "default": "SORT_ORDER_UNSPECIFIED"
          },
          {
            "name": "curor.offset",
            "description": "Page Offset",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "curor.pageNum",
            "description": "Page Number",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "curor.limit",
            "description": "Defines the page size/limit",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "curor.totalPages",
            "description": "Total number of pages to be fetched.",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64"
          },
          {
            "name": "curor.totalRecords",
            "description": "Total number of records.",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64"
          },
          {
            "name": "selectFields",
            "description": "Fields to select: id, name, description",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/v1/inventories/centers/{centerId}/unblock": {
      "put": {
        "summary": "unblock Inventory --\u003e INTERNAL API to block the inventory while processing order to unblock the inventory",
        "operationId": "InventoryService_Unblock",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "centerId",
            "description": "Unique identenfier of the center selected",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inventories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/centerresourceInventoryInfo"
                  },
                  "description": "List of inventories added to the cart"
                }
              },
              "title": "InventoryInfoList is used by the internal API for blocking anf unblocking the inventories while procesing the order"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/v1/inventories/id/{id}/centers/{centerId}": {
      "get": {
        "summary": "GetById Inventory",
        "operationId": "InventoryService_GetById",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/centerresourceInventory"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/centerresourceInventory"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/centerresourceInventory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Unique Identifier of the Inventory",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "centerId",
            "description": "Unique Identifier of the Center in which Inventory belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      },
      "put": {
        "summary": "Update Inventory",
        "operationId": "InventoryService_Update",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier of the Inventory.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "centerId",
            "description": "Unique identifier for the Center in which inventory belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "skuid": "{skuId}",
                "enterpriseId": "{enterpriseId}",
                "basePrice": "100"
              },
              "properties": {
                "description": {
                  "type": "string",
                  "description": "Description for the Inventory."
                },
                "productId": {
                  "type": "string",
                  "description": "Unique identifier for the product."
                },
                "productName": {
                  "type": "string",
                  "description": "Name of the product."
                },
                "skuId": {
                  "type": "string",
                  "description": "Unique identifier for the sku."
                },
                "skuName": {
                  "type": "string",
                  "description": "Name of the sku."
                },
                "enterpriseId": {
                  "type": "string",
                  "description": "Unique identifier for the Enterprise in which inventory belongs to."
                },
                "batchNumber": {
                  "type": "string",
                  "description": "Unique batch number of the inventory"
                },
                "mfgDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Manufacturing date of the inventory."
                },
                "expiryDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Expiry date of the inventory."
                },
                "quantityUnits": {
                  "type": "integer",
                  "format": "int32",
                  "description": "quantity of the inventory"
                },
                "placeOfOrigin": {
                  "type": "string",
                  "description": "place of the inventory"
                },
                "basePrice": {
                  "type": "number",
                  "format": "float",
                  "description": "Origin of the inventory"
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Version stores the DB version of the inventory."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags stores the key value pairs of the inventory."
                }
              },
              "description": "The Create/Update payload of the Inventory.",
              "title": "Inventory create/update data payload",
              "required": [
                "name",
                "address",
                "contact",
                "email"
              ]
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/v1/inventories/{id}/centers/{centerId}": {
      "delete": {
        "summary": "Delete Inventory",
        "operationId": "InventoryService_Delete",
        "responses": {
          "200": {
            "description": "Successful deleted the inventory resource",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "400": {
            "description": "Invalid data, Bad Request",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "404": {
            "description": "Inventory Not Found",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Unique Identifier of the Inventory",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "centerId",
            "description": "Unique Identifier of the Center in which Inventory belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    }
  },
  "definitions": {
    "centerresourceInventory": {
      "type": "object",
      "example": {
        "skuid": "{skuId}",
        "enterpriseId": "{enterpriseId}",
        "basePrice": "100"
      },
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the Inventory."
        },
        "description": {
          "type": "string",
          "description": "Description for the Inventory."
        },
        "productId": {
          "type": "string",
          "description": "Unique identifier for the product."
        },
        "productName": {
          "type": "string",
          "description": "Name of the product."
        },
        "skuId": {
          "type": "string",
          "description": "Unique identifier for the sku."
        },
        "skuName": {
          "type": "string",
          "description": "Name of the sku."
        },
        "centerId": {
          "type": "string",
          "description": "Unique identifier for the Center in which inventory belongs to."
        },
        "enterpriseId": {
          "type": "string",
          "description": "Unique identifier for the Enterprise in which inventory belongs to."
        },
        "batchNumber": {
          "type": "string",
          "description": "Unique batch number of the inventory"
        },
        "mfgDate": {
          "type": "string",
          "format": "date-time",
          "description": "Manufacturing date of the inventory."
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expiry date of the inventory."
        },
        "quantityUnits": {
          "type": "integer",
          "format": "int32",
          "description": "quantity of the inventory"
        },
        "placeOfOrigin": {
          "type": "string",
          "description": "place of the inventory"
        },
        "basePrice": {
          "type": "number",
          "format": "float",
          "description": "Origin of the inventory"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Version stores the DB version of the inventory."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags stores the key value pairs of the inventory."
        }
      },
      "description": "The Create/Update payload of the Inventory.",
      "title": "Inventory create/update data payload",
      "required": [
        "name",
        "address",
        "contact",
        "email"
      ]
    },
    "centerresourceInventoryFilter": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Unique identifier for the product."
        },
        "skuId": {
          "type": "string",
          "description": "Unique identifier for the sku."
        },
        "batchNumber": {
          "type": "string",
          "description": "Unique batch number of the inventory"
        },
        "mfgDateFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Manufacturing date of the inventory."
        },
        "mfgDateTo": {
          "type": "string",
          "format": "date-time",
          "description": "Manufacturing date of the inventory."
        },
        "expiryFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Expiry date of the inventory."
        },
        "expiryTo": {
          "type": "string",
          "format": "date-time",
          "description": "Expiry date of the inventory."
        },
        "pattern": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonKeyValue"
          },
          "description": "KeyValue pattern is used for storing key-value pairs, key being the name of the field and value being value to it while querying the DB."
        },
        "order": {
          "$ref": "#/definitions/commonOrder",
          "description": "Defines the order of the given key either by ASCENDING or DESCENDING"
        }
      },
      "description": "InventoryFilter request paylod used list the inventorys with the various filters like State, name etc.",
      "title": "InventoryFilter payload detail"
    },
    "centerresourceInventoryInfo": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Unique identenfier of the product selected"
        },
        "productName": {
          "type": "string",
          "description": "Name of the product"
        },
        "skuId": {
          "type": "string",
          "description": "Unique identenfier of the sku selected"
        },
        "skuName": {
          "type": "string",
          "description": "Label/Name for the SKU item"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "quantity of the items"
        },
        "basePrice": {
          "type": "number",
          "format": "float",
          "description": "Base price of the item"
        },
        "invRef": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/centerresourceInventoryQuantityRef"
          },
          "description": "List of inventories added to the cart"
        }
      },
      "description": "InventoryInfo carries the various inventory related meta data.",
      "title": "InventoryInfo carries the various inventory related meta data."
    },
    "centerresourceInventoryInfoList": {
      "type": "object",
      "properties": {
        "centerId": {
          "type": "string",
          "description": "Unique identenfier of the center selected"
        },
        "inventories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/centerresourceInventoryInfo"
          },
          "description": "List of inventories added to the cart"
        }
      },
      "title": "InventoryInfoList is used by the internal API for blocking anf unblocking the inventories while procesing the order"
    },
    "centerresourceInventoryListResponse": {
      "type": "object",
      "properties": {
        "inventories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/centerresourceInventory"
          },
          "description": "List of inventories."
        },
        "cursor": {
          "$ref": "#/definitions/commonCursor",
          "description": "Cursor helps in specifying the pagenation attributes like pageNo, offset, limit etc on the number of the records."
        }
      },
      "description": "Inventory list response details.",
      "title": "Inventory list response details"
    },
    "centerresourceInventoryQuantityRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identenfier of the inventory"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "quantityUnits that was blocked."
        }
      },
      "description": "InventoryQuantityRef carries the InventoryId and quantity that was blocked.",
      "title": "InventoryQuantityRef carries the InventoryId and quantity that was blocked."
    },
    "centerresourceProductInventoryFilter": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonKeyValue"
          },
          "description": "KeyValue pattern is used for storing key-value pairs, key being the name of the field and value being value to it while querying the DB."
        },
        "order": {
          "$ref": "#/definitions/commonOrder",
          "description": "Defines the order of the given key either by ASCENDING or DESCENDING"
        }
      },
      "description": "ProductInventoryFilter request paylod used list the inventorys with the various filters like State, name etc.",
      "title": "ProductInventoryFilter payload detail"
    },
    "centerresourceProductInventoryStockListResponse": {
      "type": "object",
      "properties": {
        "productStockInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/centerresourceProductStockInfo"
          },
          "description": "List of product inventories added to the cart"
        },
        "cursor": {
          "$ref": "#/definitions/commonCursor",
          "description": "Cursor helps in specifying the pagenation attributes like pageNo, offset, limit etc on the number of the records."
        }
      },
      "description": "ProductInventoryStockListResponse response for the stocks for the given product.",
      "title": "ProductInventoryStockListResponse response for the stocks for the given product."
    },
    "centerresourceProductSkuInventoryStockListResponse": {
      "type": "object",
      "properties": {
        "productSkuStockInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/centerresourceProductSkuStockInfo"
          },
          "description": "List of inventories added to the cart"
        },
        "cursor": {
          "$ref": "#/definitions/commonCursor",
          "description": "Cursor helps in specifying the pagenation attributes like pageNo, offset, limit etc on the number of the records."
        }
      },
      "description": "ProductSkuInventoryStockListResponse response for the stocks for the given product.",
      "title": "ProductSkuInventoryStockListResponse response for the stocks for the given product."
    },
    "centerresourceProductSkuStockInfo": {
      "type": "object",
      "properties": {
        "centerId": {
          "type": "string",
          "description": "Unique identifier for the Center in which inventory belongs to."
        },
        "enterpriseId": {
          "type": "string",
          "description": "Unique identifier for the Enterprise in which inventory belongs to."
        },
        "productId": {
          "type": "string",
          "description": "Unique identenfier of the product selected"
        },
        "productName": {
          "type": "string",
          "description": "Name of the product"
        },
        "assets": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "description": "Assets holds the map of key and bytes, key is the unique identifier of the SKU and byte data is the pictore of an SKU "
        },
        "skus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/centerresourceSkuStockInfo"
          },
          "description": "list of sku stock info"
        }
      },
      "description": "ProductSkuStockInfo carries the various inventory related meta data.",
      "title": "ProductSkuStockInfo carries the various inventory related meta data."
    },
    "centerresourceProductStockInfo": {
      "type": "object",
      "properties": {
        "centerId": {
          "type": "string",
          "description": "Unique identifier for the Center in which inventory belongs to."
        },
        "enterpriseId": {
          "type": "string",
          "description": "Unique identifier for the Enterprise in which inventory belongs to."
        },
        "productId": {
          "type": "string",
          "description": "Unique identenfier of the product selected"
        },
        "productName": {
          "type": "string",
          "description": "Name of the product"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "quantity of the items"
        },
        "assets": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "description": "Assets holds the map of key and bytes, key is the unique identifier of the SKU and byte data is the pictore of an SKU "
        }
      },
      "description": "InventoryInfo carries the various inventory related meta data.",
      "title": "InventoryInfo carries the various inventory related meta data."
    },
    "centerresourceSkuStockInfo": {
      "type": "object",
      "properties": {
        "skuId": {
          "type": "string",
          "description": "Unique identenfier of the sku selected"
        },
        "skuName": {
          "type": "string",
          "description": "Label/Name for the SKU item"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "quantity of the items"
        },
        "basePrice": {
          "type": "number",
          "format": "float",
          "description": "Base price of the item"
        }
      },
      "description": "SkuStockInfo carries the various inventory related meta data.",
      "title": "SkuStockInfo carries the various inventory related meta data."
    },
    "commonCursor": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "number",
          "format": "int32",
          "description": "Page Offset"
        },
        "pageNum": {
          "type": "number",
          "format": "int32",
          "description": "Page Number"
        },
        "limit": {
          "type": "number",
          "format": "int32",
          "description": "Defines the page size/limit"
        },
        "totalPages": {
          "type": "number",
          "format": "int64",
          "description": "Total number of pages to be fetched."
        },
        "totalRecords": {
          "type": "number",
          "format": "int64",
          "description": "Total number of records."
        }
      },
      "description": "Cursor helps in filtering the various list response.",
      "title": "Cursor is used as filter in list operation."
    },
    "commonDResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique Identifier of the Object Created/Updated."
        },
        "status": {
          "type": "string",
          "description": "Status message for the Operation."
        }
      },
      "description": "Origin objects holds the object's detila like creted time, updated time, updatedBY, creaatedBy",
      "title": "DResponse object holds the return object on CREATE and UPDATE request"
    },
    "commonKeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key of the attribute."
        },
        "value": {
          "type": "string",
          "description": "Value of the attribute assoiacteed wwith the key."
        }
      },
      "description": "KeyValue is used to store the key value information, which can used for selection crieteria.",
      "title": "KeyValue is used to store the key value information.",
      "required": [
        "key",
        "value"
      ]
    },
    "commonOrder": {
      "type": "object",
      "properties": {
        "orderBy": {
          "type": "string",
          "description": "Sort by attributes used for sorting based on what field of the enterprise."
        },
        "order": {
          "$ref": "#/definitions/commonSortOrder",
          "description": "Sort order can be ASCENDING/DESCENDING"
        }
      }
    },
    "commonSortOrder": {
      "type": "string",
      "enum": [
        "SORT_ORDER_UNSPECIFIED",
        "SORT_ORDER_ASCENDING",
        "SORT_ORDER_DESCENDING"
      ],
      "default": "SORT_ORDER_UNSPECIFIED"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}

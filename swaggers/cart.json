{
  "swagger": "2.0",
  "info": {
    "title": "api/dmsg/order/cart.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CartService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/carts/user/{userId}": {
      "get": {
        "summary": "GetCart Cart of the user",
        "operationId": "CartService_GetCart",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/orderCart"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/orderCart"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/orderCart"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Unique Identifier of the User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Unique Identifier of the cart",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CartService"
        ]
      },
      "post": {
        "summary": "CreateCart for the given user",
        "operationId": "CartService_CreateCart",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Unique identifier for the Cart.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the Cart."
                },
                "enterpriseId": {
                  "type": "string",
                  "description": "Unique identifier for the Enterprise in which Cart belongs to."
                },
                "centerId": {
                  "type": "string",
                  "description": "Unique identifier for the Center in which Cart belongs to."
                },
                "discountId": {
                  "type": "string",
                  "description": "Unique identifier for the discount."
                },
                "type": {
                  "$ref": "#/definitions/orderCartType",
                  "description": "Tpe of the Cart, could be FARM/DISTRIBUTOR etc."
                },
                "description": {
                  "type": "string",
                  "description": "Description for the Cart."
                },
                "items": {
                  "$ref": "#/definitions/centerresourceItem",
                  "description": "Detailed info of the cart items."
                },
                "cartPrice": {
                  "type": "number",
                  "format": "float",
                  "description": "EmailID of the Cart."
                },
                "state": {
                  "$ref": "#/definitions/commonState",
                  "description": "State of the Cart."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Version stores the DB version of the Cart."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags stores the key value pairs of the Cart."
                }
              },
              "description": "The Create/Update payload of the Cart.",
              "title": "Cart create/update data payload",
              "required": [
                "type",
                "skus",
                "amount"
              ]
            }
          }
        ],
        "tags": [
          "CartService"
        ]
      },
      "put": {
        "summary": "UpdateCart of the given user",
        "operationId": "CartService_UpdateCart",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Unique identifier for the Cart.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the Cart."
                },
                "enterpriseId": {
                  "type": "string",
                  "description": "Unique identifier for the Enterprise in which Cart belongs to."
                },
                "centerId": {
                  "type": "string",
                  "description": "Unique identifier for the Center in which Cart belongs to."
                },
                "discountId": {
                  "type": "string",
                  "description": "Unique identifier for the discount."
                },
                "type": {
                  "$ref": "#/definitions/orderCartType",
                  "description": "Tpe of the Cart, could be FARM/DISTRIBUTOR etc."
                },
                "description": {
                  "type": "string",
                  "description": "Description for the Cart."
                },
                "items": {
                  "$ref": "#/definitions/centerresourceItem",
                  "description": "Detailed info of the cart items."
                },
                "cartPrice": {
                  "type": "number",
                  "format": "float",
                  "description": "EmailID of the Cart."
                },
                "state": {
                  "$ref": "#/definitions/commonState",
                  "description": "State of the Cart."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Version stores the DB version of the Cart."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags stores the key value pairs of the Cart."
                }
              },
              "description": "The Create/Update payload of the Cart.",
              "title": "Cart create/update data payload",
              "required": [
                "type",
                "skus",
                "amount"
              ]
            }
          }
        ],
        "tags": [
          "CartService"
        ]
      }
    },
    "/v1/carts/user/{userId}/checkout": {
      "get": {
        "summary": "Checkout Cart with the given userid",
        "operationId": "CartService_Checkout",
        "responses": {
          "200": {
            "description": "Successful response of Cart list",
            "schema": {
              "$ref": "#/definitions/orderCheckoutResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/orderCheckoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Unique Identifier of the User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Unique Identifier of the cart",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CartService"
        ]
      }
    },
    "/v1/carts/user/{userId}/id/{id}": {
      "delete": {
        "summary": "Delete Cart by Id of the user",
        "operationId": "CartService_DeleteCart",
        "responses": {
          "200": {
            "description": "Successful deleted the Cart resource",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "400": {
            "description": "Invalid data, Bad Request",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "404": {
            "description": "Cart Not Found",
            "schema": {
              "$ref": "#/definitions/commonDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Unique Identifier of the User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Unique Identifier of the cart",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CartService"
        ]
      }
    }
  },
  "definitions": {
    "centerresourceInventoryInfo": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Unique identenfier of the product selected"
        },
        "productName": {
          "type": "string",
          "description": "Name of the product"
        },
        "skuId": {
          "type": "string",
          "description": "Unique identenfier of the sku selected"
        },
        "skuName": {
          "type": "string",
          "description": "Label/Name for the SKU item"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "quantity of the items"
        },
        "basePrice": {
          "type": "number",
          "format": "float",
          "description": "Base price of the item"
        },
        "invRef": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/centerresourceInventoryQuantityRef"
          },
          "description": "List of inventories added to the cart"
        }
      },
      "description": "InventoryInfo carries the various inventory related meta data.",
      "title": "InventoryInfo carries the various inventory related meta data."
    },
    "centerresourceInventoryQuantityRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identenfier of the inventory"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "quantityUnits that was blocked."
        }
      },
      "description": "InventoryQuantityRef carries the InventoryId and quantity that was blocked.",
      "title": "InventoryQuantityRef carries the InventoryId and quantity that was blocked."
    },
    "centerresourceItem": {
      "type": "object",
      "properties": {
        "inventories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/centerresourceInventoryInfo"
          },
          "description": "List of inventories added to the cart"
        },
        "subscriptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/subscriptionSubscription"
          },
          "description": "list of subscription added to the cart"
        }
      },
      "description": "Cart Items holds the inventory and subscription informations",
      "title": "Cart Items holds the inventory and subscription informations"
    },
    "commonAddress": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name in the address"
        },
        "street": {
          "type": "string",
          "description": "Address Line 1 for Street, buiding/flat details etc"
        },
        "area": {
          "type": "string",
          "description": "Address Line 2 for village/sector"
        },
        "locality": {
          "type": "string",
          "description": "Nearest locality of the address within the given pincode."
        },
        "city": {
          "type": "string",
          "description": "City"
        },
        "state": {
          "type": "string",
          "description": "State or Province"
        },
        "pincode": {
          "type": "integer",
          "format": "int32",
          "example": 94101,
          "description": "ZIP or Postal Code"
        },
        "contactNumber": {
          "type": "string",
          "description": "Contact number"
        }
      },
      "description": "An address associated with an enterprise",
      "title": "Address object"
    },
    "commonDResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique Identifier of the Object Created/Updated."
        },
        "status": {
          "type": "string",
          "description": "Status message for the Operation."
        }
      },
      "description": "Origin objects holds the object's detila like creted time, updated time, updatedBY, creaatedBy",
      "title": "DResponse object holds the return object on CREATE abd UPDATE request"
    },
    "commonOrigin": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "User data: Created time"
        },
        "createdBy": {
          "type": "string",
          "description": "User data: Created By"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the record was last updated."
        },
        "updatedBy": {
          "type": "string",
          "description": "User data: Updated By"
        }
      },
      "description": "Origin objects holds the object's detila like creted time, updated time, updatedBY, creaatedBy",
      "title": "Origin object"
    },
    "commonState": {
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "STATE_CREATED",
        "STATE_ACTIVE",
        "STATE_SUSPENDED",
        "STATE_CLOSED",
        "STATE_PAUSED",
        "STATE_PENDING",
        "STATE_EXPIRED",
        "STATE_FAILED",
        "STATE_COMPLETE"
      ],
      "default": "STATE_UNSPECIFIED",
      "description": " - STATE_UNSPECIFIED: Represents an unspecified or default state.\n - STATE_CREATED: The initial state when the object is created.\n - STATE_ACTIVE: The object is active and operational.\n - STATE_SUSPENDED: The object is temporarily suspended or inactive.\n - STATE_CLOSED: The object is closed or no longer in operation.\n - STATE_PAUSED: The object is paused.\n - STATE_PENDING: The object is still in pending.\n - STATE_EXPIRED: The object is expired.\n - STATE_FAILED: The object has FAILED.\n - STATE_COMPLETE: The object operation has completed."
    },
    "orderCart": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Cart."
        },
        "enterpriseId": {
          "type": "string",
          "description": "Unique identifier for the Enterprise in which Cart belongs to."
        },
        "userId": {
          "type": "string",
          "description": "Unique identifier for the Cart."
        },
        "centerId": {
          "type": "string",
          "description": "Unique identifier for the Center in which Cart belongs to."
        },
        "discountId": {
          "type": "string",
          "description": "Unique identifier for the discount."
        },
        "type": {
          "$ref": "#/definitions/orderCartType",
          "description": "Tpe of the Cart, could be FARM/DISTRIBUTOR etc."
        },
        "description": {
          "type": "string",
          "description": "Description for the Cart."
        },
        "items": {
          "$ref": "#/definitions/centerresourceItem",
          "description": "Detailed info of the cart items."
        },
        "cartPrice": {
          "type": "number",
          "format": "float",
          "description": "EmailID of the Cart."
        },
        "state": {
          "$ref": "#/definitions/commonState",
          "description": "State of the Cart."
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Version stores the DB version of the Cart."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags stores the key value pairs of the Cart."
        }
      },
      "description": "The Create/Update payload of the Cart.",
      "title": "Cart create/update data payload",
      "required": [
        "userId",
        "type",
        "skus",
        "amount"
      ]
    },
    "orderCartType": {
      "type": "string",
      "enum": [
        "Cart_TYPE_UNSPECIFIED",
        "Cart_TYPE_USER",
        "Cart_TYPE_SYSTEM"
      ],
      "default": "Cart_TYPE_UNSPECIFIED"
    },
    "orderCheckoutResponse": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/orderCheckoutSummary",
          "description": "Checkout summary details."
        }
      },
      "description": "CheckoutResponse holds the checkout details of the cart",
      "title": "CheckoutResponse holds the checkout details of the cart"
    },
    "orderCheckoutSummary": {
      "type": "object",
      "properties": {
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of items being processed"
        },
        "amountPayable": {
          "type": "integer",
          "format": "int32",
          "description": "Total amount payable for the items"
        }
      },
      "description": "CheckoutSummary holds the summary details of the cart",
      "title": "CheckoutSummary holds the summary details of the cart"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "subscriptionSubscription": {
      "type": "object",
      "example": {
        "inventoryId": "{inventoryId}",
        "enterpriseId": "{enterpriseId}",
        "startDate": "{startDate}",
        "endDate": "{endDate}"
      },
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the zone."
        },
        "productId": {
          "type": "string",
          "description": "Unique Identifier of the product."
        },
        "productName": {
          "type": "string",
          "description": "Unique Identifier of the product."
        },
        "skuId": {
          "type": "string",
          "description": "Unique Identifier of the product."
        },
        "skuName": {
          "type": "string",
          "description": "Unique Identifier of the product."
        },
        "description": {
          "type": "string",
          "description": "Description for the zone."
        },
        "enterpriseId": {
          "type": "string",
          "description": "Unique identifier for the enterprise in which zone belongs to."
        },
        "userId": {
          "type": "string",
          "description": "Unique identifier for the User in which subscription belongs to."
        },
        "centerId": {
          "type": "string",
          "description": "Unique identifier for the Center in which subscription belongs to."
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Start date of the inventory."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "End date of the inventory."
        },
        "address": {
          "$ref": "#/definitions/commonAddress",
          "description": "Address of the User."
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "Quantity of the inventory."
        },
        "subscriptionPrice": {
          "type": "number",
          "format": "float",
          "description": "Total Subscription amount of the inventory subscribed."
        },
        "state": {
          "$ref": "#/definitions/commonState",
          "description": "State of the zone."
        },
        "origin": {
          "$ref": "#/definitions/commonOrigin",
          "description": "User origin details: like created time, update time etc"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Version stores the DB version of the zone."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags stores the key value pairs of the zone."
        }
      },
      "description": "The Create/Update payload of the Subscription.",
      "title": "Subscription create/update data payload",
      "required": [
        "inventoryId",
        "enterpriseId",
        "centerId"
      ]
    }
  }
}

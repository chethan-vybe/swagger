{
    "swagger": "2.0",
    "info": {
      "title": "api/dmsg/inventory/inventory.proto",
      "version": "version not set"
    },
    "tags": [
      {
        "name": "InventoryService"
      }
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/v1/inventories/center/{centerId}": {
        "get": {
          "summary": "List Inventories",
          "operationId": "InventoryService_ListInventory",
          "responses": {
            "200": {
              "description": "Successful response of inventory list",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryListResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryListResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/rpcStatus"
              }
            }
          },
          "parameters": [
            {
              "name": "centerId",
              "description": "This center id is used while fetching the associated inventories.",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "filters.productId",
              "description": "Unique identifier for the product.",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "filters.skuId",
              "description": "Unique identifier for the sku.",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "filters.batchNumber",
              "description": "Unique batch number of the inventory",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "filters.mfgDateFrom",
              "description": "Manufacturing date of the inventory.",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "filters.mfgDateTo",
              "description": "Manufacturing date of the inventory.",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "filters.expiryFrom",
              "description": "Expiry date of the inventory.",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "filters.expiryTo",
              "description": "Expiry date of the inventory.",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "filters.basePrice",
              "description": "Origin of the inventory",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "float"
            },
            {
              "name": "filters.state",
              "description": "State, filters based on the Inventory state\n\n - STATE_UNSPECIFIED: Represents an unspecified or default state.\n - STATE_CREATED: The initial state when the object is created.\n - STATE_ACTIVE: The object is active and operational.\n - STATE_SUSPENDED: The object is temporarily suspended or inactive.\n - STATE_CLOSED: The object is closed or no longer in operation.",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "STATE_UNSPECIFIED",
                "STATE_CREATED",
                "STATE_ACTIVE",
                "STATE_SUSPENDED",
                "STATE_CLOSED"
              ],
              "default": "STATE_UNSPECIFIED"
            },
            {
              "name": "filters.order.orderBy",
              "description": "Sort by attributes used for sorting based on what field of the enterprise.",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "filters.order.order",
              "description": "Sort order can be ASCENDING/DESCENDING",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "SORT_ORDER_UNSPECIFIED",
                "SORT_ORDER_ASCENDING",
                "SORT_ORDER_DESCENDING"
              ],
              "default": "SORT_ORDER_UNSPECIFIED"
            },
            {
              "name": "curor.offset",
              "description": "Page Offset",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "int32"
            },
            {
              "name": "curor.pageNum",
              "description": "Page Number",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "int32"
            },
            {
              "name": "curor.limit",
              "description": "Defines the page size/limit",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "int32"
            },
            {
              "name": "curor.totalPages",
              "description": "Total number of pages to be fetched.",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "int64"
            },
            {
              "name": "curor.totalRecords",
              "description": "Total number of records.",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "int64"
            },
            {
              "name": "selectFields",
              "description": "Fields to select: id, name, description",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi"
            }
          ],
          "tags": [
            "InventoryService"
          ]
        },
        "post": {
          "summary": "Create Inventory",
          "operationId": "InventoryService_Create",
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryResponse"
              }
            },
            "404": {
              "description": "Not Found",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/rpcStatus"
              }
            }
          },
          "parameters": [
            {
              "name": "centerId",
              "description": "Unique identifier for the center in which inventory belongs to.",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "inventories": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "$ref": "#/definitions/inventoryInventory"
                    },
                    "description": "List of the Inventories."
                  }
                }
              }
            }
          ],
          "tags": [
            "InventoryService"
          ]
        },
        "put": {
          "summary": "Update Inventory",
          "operationId": "InventoryService_Update",
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryResponse"
              }
            },
            "404": {
              "description": "Not Found",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/rpcStatus"
              }
            }
          },
          "parameters": [
            {
              "name": "centerId",
              "description": "Unique identifier for the Center in which inventory belongs to.",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "example": {
                  "skuid": "{skuId}",
                  "enterpriseId": "{enterpriseId}",
                  "basePrice": "100"
                },
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the Inventory."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the Inventory."
                  },
                  "productId": {
                    "type": "string",
                    "description": "Unique identifier for the product."
                  },
                  "productName": {
                    "type": "string",
                    "description": "Name of the product."
                  },
                  "skuId": {
                    "type": "string",
                    "description": "Unique identifier for the sku."
                  },
                  "skuName": {
                    "type": "string",
                    "description": "Name of the sku."
                  },
                  "enterpriseId": {
                    "type": "string",
                    "description": "Unique identifier for the Enterprise in which inventory belongs to."
                  },
                  "batchNumber": {
                    "type": "string",
                    "description": "Unique batch number of the inventory"
                  },
                  "mfgDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Manufacturing date of the inventory."
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expiry date of the inventory."
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "quantity of the inventory"
                  },
                  "place": {
                    "type": "string",
                    "description": "place of the inventory"
                  },
                  "basePrice": {
                    "type": "number",
                    "format": "float",
                    "description": "Origin of the inventory"
                  },
                  "state": {
                    "$ref": "#/definitions/commonState",
                    "description": "State of the Inventory."
                  },
                  "version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Version stores the DB version of the inventory."
                  },
                  "tags": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Tags stores the key value pairs of the inventory."
                  }
                },
                "description": "The Create/Update payload of the Inventory.",
                "title": "Inventory create/update data payload",
                "required": [
                  "name",
                  "address",
                  "contact",
                  "email"
                ]
              }
            }
          ],
          "tags": [
            "InventoryService"
          ]
        }
      },
      "/v1/inventories/center/{centerId}/admin": {
        "get": {
          "summary": "List admin Inventories",
          "operationId": "InventoryService_ListAdminInventory",
          "responses": {
            "200": {
              "description": "Successful response of inventory list",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryListResponse"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryListResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/rpcStatus"
              }
            }
          },
          "parameters": [
            {
              "name": "centerId",
              "description": "This center id is used while fetching the associated inventories.",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "filters.productId",
              "description": "Unique identifier for the product.",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "filters.skuId",
              "description": "Unique identifier for the sku.",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "filters.batchNumber",
              "description": "Unique batch number of the inventory",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "filters.mfgDateFrom",
              "description": "Manufacturing date of the inventory.",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "filters.mfgDateTo",
              "description": "Manufacturing date of the inventory.",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "filters.expiryFrom",
              "description": "Expiry date of the inventory.",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "filters.expiryTo",
              "description": "Expiry date of the inventory.",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "filters.basePrice",
              "description": "Origin of the inventory",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "float"
            },
            {
              "name": "filters.state",
              "description": "State, filters based on the Inventory state\n\n - STATE_UNSPECIFIED: Represents an unspecified or default state.\n - STATE_CREATED: The initial state when the object is created.\n - STATE_ACTIVE: The object is active and operational.\n - STATE_SUSPENDED: The object is temporarily suspended or inactive.\n - STATE_CLOSED: The object is closed or no longer in operation.",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "STATE_UNSPECIFIED",
                "STATE_CREATED",
                "STATE_ACTIVE",
                "STATE_SUSPENDED",
                "STATE_CLOSED"
              ],
              "default": "STATE_UNSPECIFIED"
            },
            {
              "name": "filters.order.orderBy",
              "description": "Sort by attributes used for sorting based on what field of the enterprise.",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "filters.order.order",
              "description": "Sort order can be ASCENDING/DESCENDING",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "SORT_ORDER_UNSPECIFIED",
                "SORT_ORDER_ASCENDING",
                "SORT_ORDER_DESCENDING"
              ],
              "default": "SORT_ORDER_UNSPECIFIED"
            },
            {
              "name": "curor.offset",
              "description": "Page Offset",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "int32"
            },
            {
              "name": "curor.pageNum",
              "description": "Page Number",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "int32"
            },
            {
              "name": "curor.limit",
              "description": "Defines the page size/limit",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "int32"
            },
            {
              "name": "curor.totalPages",
              "description": "Total number of pages to be fetched.",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "int64"
            },
            {
              "name": "curor.totalRecords",
              "description": "Total number of records.",
              "in": "query",
              "required": false,
              "type": "number",
              "format": "int64"
            },
            {
              "name": "selectFields",
              "description": "Fields to select: id, name, description",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi"
            }
          ],
          "tags": [
            "InventoryService"
          ]
        }
      },
      "/v1/inventories/{id}/center/{centerId}": {
        "get": {
          "summary": "GetById Inventory",
          "operationId": "InventoryService_GetById",
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/inventoryInventory"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/inventoryInventory"
              }
            },
            "404": {
              "description": "Not Found",
              "schema": {
                "$ref": "#/definitions/inventoryInventory"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/rpcStatus"
              }
            }
          },
          "parameters": [
            {
              "name": "id",
              "description": "Unique Identifier of the Inventory",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "centerId",
              "description": "Unique Identifier of the Center in which Inventory belongs to.",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "tags": [
            "InventoryService"
          ]
        },
        "delete": {
          "summary": "Delete Inventory",
          "operationId": "InventoryService_Delete",
          "responses": {
            "200": {
              "description": "Successful deleted the inventory resource",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryResponse"
              }
            },
            "400": {
              "description": "Invalid data, Bad Request",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryResponse"
              }
            },
            "404": {
              "description": "Inventory Not Found",
              "schema": {
                "$ref": "#/definitions/inventoryInventoryResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/rpcStatus"
              }
            }
          },
          "parameters": [
            {
              "name": "id",
              "description": "Unique Identifier of the Inventory",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "centerId",
              "description": "Unique Identifier of the Center in which Inventory belongs to.",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "tags": [
            "InventoryService"
          ]
        }
      }
    },
    "definitions": {
      "commonCursor": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "number",
            "format": "int32",
            "description": "Page Offset"
          },
          "pageNum": {
            "type": "number",
            "format": "int32",
            "description": "Page Number"
          },
          "limit": {
            "type": "number",
            "format": "int32",
            "description": "Defines the page size/limit"
          },
          "totalPages": {
            "type": "number",
            "format": "int64",
            "description": "Total number of pages to be fetched."
          },
          "totalRecords": {
            "type": "number",
            "format": "int64",
            "description": "Total number of records."
          }
        },
        "description": "Cursor helps in filtering the various list response.",
        "title": "Cursor is used as filter in list operation."
      },
      "commonKeyValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key of the attribute."
          },
          "value": {
            "type": "string",
            "description": "Value of the attribute assoiacteed wwith the key."
          }
        },
        "description": "KeyValue is used to store the key value information, which can used for selection crieteria.",
        "title": "KeyValue is used to store the key value information.",
        "required": [
          "key",
          "value"
        ]
      },
      "commonOrder": {
        "type": "object",
        "properties": {
          "orderBy": {
            "type": "string",
            "description": "Sort by attributes used for sorting based on what field of the enterprise."
          },
          "order": {
            "$ref": "#/definitions/commonSortOrder",
            "description": "Sort order can be ASCENDING/DESCENDING"
          }
        }
      },
      "commonSortOrder": {
        "type": "string",
        "enum": [
          "SORT_ORDER_UNSPECIFIED",
          "SORT_ORDER_ASCENDING",
          "SORT_ORDER_DESCENDING"
        ],
        "default": "SORT_ORDER_UNSPECIFIED"
      },
      "commonState": {
        "type": "string",
        "enum": [
          "STATE_UNSPECIFIED",
          "STATE_CREATED",
          "STATE_ACTIVE",
          "STATE_SUSPENDED",
          "STATE_CLOSED"
        ],
        "default": "STATE_UNSPECIFIED",
        "description": " - STATE_UNSPECIFIED: Represents an unspecified or default state.\n - STATE_CREATED: The initial state when the object is created.\n - STATE_ACTIVE: The object is active and operational.\n - STATE_SUSPENDED: The object is temporarily suspended or inactive.\n - STATE_CLOSED: The object is closed or no longer in operation."
      },
      "inventoryInventory": {
        "type": "object",
        "example": {
          "skuid": "{skuId}",
          "enterpriseId": "{enterpriseId}",
          "basePrice": "100"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the Inventory."
          },
          "description": {
            "type": "string",
            "description": "Description for the Inventory."
          },
          "productId": {
            "type": "string",
            "description": "Unique identifier for the product."
          },
          "productName": {
            "type": "string",
            "description": "Name of the product."
          },
          "skuId": {
            "type": "string",
            "description": "Unique identifier for the sku."
          },
          "skuName": {
            "type": "string",
            "description": "Name of the sku."
          },
          "centerId": {
            "type": "string",
            "description": "Unique identifier for the Center in which inventory belongs to."
          },
          "enterpriseId": {
            "type": "string",
            "description": "Unique identifier for the Enterprise in which inventory belongs to."
          },
          "batchNumber": {
            "type": "string",
            "description": "Unique batch number of the inventory"
          },
          "mfgDate": {
            "type": "string",
            "format": "date-time",
            "description": "Manufacturing date of the inventory."
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "description": "Expiry date of the inventory."
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "quantity of the inventory"
          },
          "place": {
            "type": "string",
            "description": "place of the inventory"
          },
          "basePrice": {
            "type": "number",
            "format": "float",
            "description": "Origin of the inventory"
          },
          "state": {
            "$ref": "#/definitions/commonState",
            "description": "State of the Inventory."
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "description": "Version stores the DB version of the inventory."
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags stores the key value pairs of the inventory."
          }
        },
        "description": "The Create/Update payload of the Inventory.",
        "title": "Inventory create/update data payload",
        "required": [
          "name",
          "address",
          "contact",
          "email"
        ]
      },
      "inventoryInventoryFilter": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Unique identifier for the product."
          },
          "skuId": {
            "type": "string",
            "description": "Unique identifier for the sku."
          },
          "batchNumber": {
            "type": "string",
            "description": "Unique batch number of the inventory"
          },
          "mfgDateFrom": {
            "type": "string",
            "format": "date-time",
            "description": "Manufacturing date of the inventory."
          },
          "mfgDateTo": {
            "type": "string",
            "format": "date-time",
            "description": "Manufacturing date of the inventory."
          },
          "expiryFrom": {
            "type": "string",
            "format": "date-time",
            "description": "Expiry date of the inventory."
          },
          "expiryTo": {
            "type": "string",
            "format": "date-time",
            "description": "Expiry date of the inventory."
          },
          "basePrice": {
            "type": "number",
            "format": "float",
            "description": "Origin of the inventory"
          },
          "pattern": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonKeyValue"
            },
            "description": "KeyValue pattern is used for storing key-value pairs, key being the name of the field and value being value to it while querying the DB."
          },
          "state": {
            "$ref": "#/definitions/commonState",
            "description": "State, filters based on the Inventory state"
          },
          "order": {
            "$ref": "#/definitions/commonOrder",
            "description": "Defines the order of the given key either by ASCENDING or DESCENDING"
          }
        },
        "description": "InventoryFilter request paylod used list the inventorys with the various filters like State, name etc.",
        "title": "InventoryFilter payload detail"
      },
      "inventoryInventoryListResponse": {
        "type": "object",
        "properties": {
          "inventories": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/inventoryInventory"
            },
            "description": "List of inventories."
          },
          "cursor": {
            "$ref": "#/definitions/commonCursor",
            "description": "Cursor helps in specifying the pagenation attributes like pageNo, offset, limit etc on the number of the records."
          }
        },
        "description": "Inventory list response details.",
        "title": "Inventory list response details"
      },
      "inventoryInventoryResponse": {
        "type": "object",
        "example": {
          "status": "Inventory Test created Successfully."
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Status message of the operation."
          }
        },
        "description": "Inventory create/update response details.",
        "title": "Inventory create/update response details"
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "additionalProperties": {}
      },
      "rpcStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/protobufAny"
            }
          }
        }
      }
    }
  }
  